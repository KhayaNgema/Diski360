@model IEnumerable<MyField.Models.Tournament>
@inject MyField.Interfaces.IEncryptionService encryptionService

@{
    ViewData["Title"] = ViewBag.DivisionName + " Tournaments";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}


<head>
    <style>
        tbody td {
            vertical-align: middle !important;
        }
    </style>
</head>

<br />
@await Html.PartialAsync("_HomeButton")
<h4 class="text-center">@ViewBag.DivisionName Tournaments</h4>
<br />
@if (Model.Any())
{
    if (User.IsInRole("Sport Administrator"))
    {
        <p class="text-center">
            Explore the tournaments managed by @ViewBag.DivisionName. This page provides a curated list of tournaments under our oversight. Additionally, you can manage these tournaments directly from this page, reflecting our commitment to supporting and organizing local talent and organizations.
        </p>
    }
    else
    {
        <p class="text-center" style="padding-right:10px; padding-left:10px;">
            Explore the tournaments managed by @ViewBag.DivisionName. This page provides a curated list of tournaments under our oversight. Additionally, you can manage these tournaments directly from this page, reflecting our commitment to supporting and organizing local talent and organizations.
        </p>
    }
    <br />
    <div class="fixtures-search-create-container" style="margin-bottom: 10px;">
        <div class="row">
            <div class="col-12 col-lg-4 d-flex justify-content-between align-items-center">
                <div class="search-bar" style="flex: 1; margin-right: 10px;">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search by tournament name, type..." style="width: 100%;">
                </div>
                @if (User.IsInRole("Sport Administrator"))
                {
                    <div class="create-button">
                        <a href="@Url.Action("NewTournament")" class="btn btn-outline-primary btn-create" id="addButton" style="white-space: nowrap;">
                            <i class="fas fa-plus"></i> Create new
                        </a>
                    </div>
                }
                else
                {

                }
            </div>
        </div>
    </div>

    <br />
    @if (TempData["Message"] != null)
    {
        <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
            @TempData["Message"]
            <span class="close" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </span>
        </div>
    }
    <div class="table-responsive">
        <table class="table table-striped table-borderless tournaments-table">
            <thead>
                <tr style="color:white;background-color: #324260; white-space: nowrap;">
                    <th style="white-space: nowrap;">Tournament</th>
                    <th style="white-space: nowrap;">Trophy</th>
                    <th style="white-space: nowrap;">Start date</th>
                    <th style="white-space: nowrap;">Location</th>
                    <th style="white-space: nowrap;">Joining fee(R)</th>
                    <th style="white-space: nowrap;">Join By Date</th>
                    <th style="white-space: nowrap;">Type</th>
                    <th style="white-space: nowrap;">Status</th>
                    <th style="white-space: nowrap;">More actions</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.DistinctBy(club => club.TournamentId))
                {
                    var dropdownId = "dropdownMenuButton" + item.TournamentId;
                    var encryptedTournamentId = encryptionService.Encrypt(item.TournamentId);

                    <tr>
                        <td class="column-max-width">
                            <div style="display: flex; align-items: center;">
                                @if (!string.IsNullOrEmpty(item.TournamentImage))
                                {
                                    <img src="~/@item.TournamentImage" alt="@item.TournamentImage"
                                         class="tournament-image"
                                         style="margin-right: 15px; width:70px; height:100px; object-fit:fill;" />
                                }
                                else
                                {
                                    <span style="margin-right: 15px;">N/A</span>
                                }
                                <span style="display: inline-block; vertical-align: middle;">
                                    @(string.IsNullOrEmpty(item.TournamentName) ? "N/A" : item.TournamentName)
                                </span>
                            </div>
                        </td>

                        <td class="column-max-width">
                            @if (!string.IsNullOrEmpty(item.TrophyImage))
                            {
                                <img src="~/@item.TrophyImage" alt="trophy" class="tournament-image" style="margin-right: 20px; width:90px; height:100px;object-fit:fill; mix-blend-mode: multiply;" />
                            }
                            else
                            {
                                <span>N/A</span>
                            }
                        </td>

                        <td class="column-max-width">
                            @(item.StartDate == null ? "N/A" : item.StartDate.ToString("ddd, dd MMM yyyy"))
                        </td>

                        <td class="column-max-width">
                            @(string.IsNullOrEmpty(item.TournamentLocation) ? "N/A" : item.TournamentLocation)
                        </td>

                        <td class="column-max-width">
                            @(item.JoiningFee == null ? "N/A" : $"R {item.JoiningFee}")
                        </td>

                        <td class="column-max-width">
                            <div class="d-flex flex-column">
                                <span class="mb-1">
                                    <i class="fa fa-calendar-alt me-1"></i>
                                    @(item.JoiningDueDate == null ? "N/A" : item.JoiningDueDate.ToString("ddd, dd MMM yyyy"))
                                </span>
                                <span>
                                    <i class="fa fa-clock me-1"></i>
                                    @(item.JoiningDueDate == null ? "N/A" : item.JoiningDueDate.ToString("HH:mm"))
                                </span>
                            </div>
                        </td>
                        <td class="column-max-width">
                            @item.TournamentType.ToString().Replace("_", " ")
                        </td>
                        <td class="column-max-width">
                            @item.TournamentStatus
                            (@(item.IsPublished ? "Approved" : "Awaiting Approval"))
                        </td>

                       
                        @if (User.IsInRole("Sport Administrator"))
                        {
                            <td class="text-right">
                                <button class="btn btn-primary btn-sm action-button" type="button" data-id="@item.TournamentId">
                                    Actions
                                </button>
                                <div class="action-tab" id="actionTab-@item.TournamentId" style="display: none;">
                                    <a class="tab-item" href="@Url.Action("TournamentDetails", "Tournaments", new { tournamentId = encryptedTournamentId  })">
                                        <i class="fas fa-info-circle" class="tab-item" style="color: blue;"></i> Details
                                    </a>
                                    <a class="tab-item" href="#" onclick="event.preventDefault(); document.getElementById('approve-form-@encryptedTournamentId').submit();">
                                        <i class="fas fa-check-circle" style="color: green;"></i> Approve
                                    </a>

                                    <form id="approve-form-@encryptedTournamentId" method="post" action="@Url.Action("ApproveTournament", "Tournaments")" style="display: none;">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="tournamentId" value="@encryptedTournamentId" />
                                    </form>
                                    <a class="tab-item" href="@Url.Action("UpdateTournament", "Tournaments", new { tournamentId = encryptedTournamentId  })">
                                        <i class="fas fa-pen" class="tab-item" style="color: green;"></i> Update
                                    </a>


                                    <a class="tab-item" href="@Url.Action("TournamentRules", "Tournaments", new { tournamentId = encryptedTournamentId  })">
                                        <i class="fas fa-gavel" class="tab-item" style="color: darkorange;"></i> Rules
                                    </a>
                                    <a class="tab-item" href="@Url.Action("TournamentParticipants", "Tournaments", new { tournamentId = encryptedTournamentId  })">
                                        <i class="fas fa-futbol" class="tab-item" style="color: grey;"></i> Clubs
                                    </a>
                                    <a class="tab-item" href="@Url.Action("FixturesBackOffice", "Tournaments", new { tournamentId = encryptedTournamentId  })">
                                        <i class="fas fa-calendar-alt" class="tab-item" style="color: grey;"></i> Fixtures
                                    </a>
                                    <a class="tab-item" href="@Url.Action("KnockoutBackOffice", "Tournaments", new { tournamentId = encryptedTournamentId  })">
                                        <i class="fas fa-futbol" class="tab-item" style="color: grey;"></i> Knockout
                                    </a>
                                    <a class="tab-item" href="#" onclick="event.preventDefault(); document.getElementById('cancel-form-@encryptedTournamentId').submit();">
                                        <i class="fas fa-times-circle" style="color: #dc3545;"></i> Cancel
                                    </a>

                                    <form id="cancel-form-@encryptedTournamentId" method="post" action="@Url.Action("CancelTournament", "Tournaments")" style="display: none;">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="tournamentId" value="@encryptedTournamentId" />
                                    </form>
                                </div>
                            </td>
                        }
                       
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="d-flex justify-content-center align-items-center" style="height: 60vh; flex-direction: column;">
        <p class="text-center">There are no tournaments yet.</p>
        @if (User.IsInRole("Sport Administrator"))
        {
            <div class="create-button">
                <a href="@Url.Action("NewTournament")" class="btn btn-outline-primary btn-create" id="addButton" style="white-space: nowrap;">
                    <i class="fas fa-plus"></i> Create new
                </a>
            </div>
        }
        else
        {

        }
    </div>
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $("#searchInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $(".tournaments-table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    $(document).on('click', function (event) {
        var $target = $(event.target);
        if (!$target.closest('.dropdown-menu').length && !$target.closest('.dropdown-toggle').length) {
            $('.dropdown-menu').removeClass('show');
        }
    });

    setTimeout(function () {
        document.getElementById("tempDataMessage").style.display = "none";
    }, 3000);
</script>
