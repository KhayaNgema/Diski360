@model MyField.ViewModels.TournamentFixtureViewModel

@{
    ViewData["Title"] = ViewBag.TournamentName + " Fixture";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}
<br />
@await Html.PartialAsync("_BackButton")
<h4 style="text-align:center;">New fixture</h4>
<br />
<p class="text-center" style="padding-right:10px; padding-left:10px;">
    On this page, you can create a new fixture by selecting two clubs, scheduling the kickoff dates, and specifying the location. Additionally, you can set the match officials for the fixture. This feature allows you to easily set up and organize new fixtures according to your requirements.
</p>
<br />
<div class="row fixture-create-container">
    <div class="col-md-12">
        <form asp-action="NewFixture">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-floating mb-3">
                <select asp-for="FixtureRound" id="FixtureRound" class="form-control border-bottom-only"
                        asp-items="Html.GetEnumSelectList<FixtureRound>()">
                    <option value="">-- Select Fixture Round --</option>
                </select>
            </div>

            <div class="form-group form-inline">
                <div class="row">
                    <div class="col-md-6">
                        <select asp-for="HomeTeamClubId" class="form-control border-bottom-only" asp-items="ViewBag.TournamentClubs">
                            <option value="">Home Team</option>
                        </select>
                        <span asp-validation-for="HomeTeamClubId" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <select asp-for="AwayTeamClubId" class="form-control border-bottom-only" asp-items="ViewBag.TournamentClubs">
                            <option value="">Away Team</option>
                        </select>
                        <span asp-validation-for="AwayTeamClubId" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-floating mb-3">
                <input asp-for="KickOffDate" class="form-control border-bottom-only" placeholder="KickOffDate" type="date" min="@DateTime.Today.ToString("yyyy-MM-dd")" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                <label asp-for="KickOffDate" class="form-label">Kickoff date</label>
                <span asp-validation-for="KickOffDate" class="text-danger"></span>
            </div>
            <br />
            <div class="form-floating mb-3">
                <input asp-for="KickOffTime" class="form-control border-bottom-only" placeholder="KickOffTime" type="time" value="@DateTime.Now.ToString("HH:mm")" />
                <label asp-for="KickOffTime" class="form-label">Kickoff time</label>
                <span asp-validation-for="KickOffTime" class="text-danger"></span>
            </div>
            <br />
            <div class="form-floating mb-3">
                <input asp-for="Location" class="form-control border-bottom-only" placeholder="Location" />
                <label asp-for="Location" class="form-label">Location</label>
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group" style="display: flex; justify-content: flex-end;">
                        <input type="hidden" asp-for="TournamentId" value="@Model?.TournamentId" />
                        <input type="submit" value="Create" class="btn btn-primary" style="padding: 10px; margin-bottom: 10px;" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


