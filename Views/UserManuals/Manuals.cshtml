@model IEnumerable<MyField.Models.UserManuals>
@inject MyField.Interfaces.IEncryptionService encryptionService
@{
    ViewData["Title"] = "User manuals";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<br />
@await Html.PartialAsync("_HomeButton")
<h4 style="text-align:center;">User manuals</h4>
<br />
@if(User.IsInRole("System Administrator"))
{
    <p class="text-center" style="padding-right:10px; padding-left:10px;">
        On this page, you are managing user manuals. You can upload new manuals, update existing ones, and view details of the manuals available.
    </p>
}
else
{
    <p class="text-center" style="padding-right:10px; padding-left:10px;">
        On this page, you are viewing your specific user manual. You can download the manual relevant to your role, view important details, and stay informed about the necessary processes.
        The manual provides guidance on how to perform your duties effectively and helps you understand the resources available to you. Please ensure you download and review the manual to stay up to date with the necessary guidelines and information.
    </p>
}

<br />
@if (TempData["Message"] != null)
{
    <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
        @TempData["Message"]
        <span class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </span>
    </div>
}
@if (Model.Any())
{
    <div class="players-search-create-container" style="margin-bottom: 10px;">
        <div class="row">
            @if (User.IsInRole("System Administrator"))
            {
                <div class="col-4 create-button">
                    <a href="@Url.Action("UploadManual")" class="btn btn-sm btn-create" id="addButton" style="white-space: nowrap;">
                        <i class="fas fa-plus"></i> Upload new
                    </a>
                </div>
            }
        </div>
    </div>

    <br />
    <div class="row">
        @foreach (var item in Model)
        {
            // Check if the user should see this manual based on their role
            if (User.IsInRole(item.UserRole) || User.IsInRole("System Administrator"))
            {
                var encryptedManualId = encryptionService.Encrypt(item.ManualId);

                <div class="col-12 mb-3">
                    <div class="card h-100" style="border: 1px solid #ddd;">
                        <div class="card-body d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-center">
                                <a href="~/@item.ManualDocument" target="_blank" class="btn btn-sm" title="View Document" style="display: flex; align-items: center;">
                                    <i class="fas fa-file-pdf fa-2x" style="margin-right: 8px; color:red;"></i>
                                    <span style="font-size: 1.25rem;">@Html.DisplayFor(modelItem => item.UserRole)</span>
                                </a>
                            </div>
                            <div class="text-right">
                                @if (User.IsInRole("System Administrator"))
                                {
                                    <button class="btn btn-primary btn-sm action-button" type="button" data-id="@item.ManualId">
                                        Actions
                                    </button>
                                    <div class="action-tab" id="actionTab-@item.ManualId" style="display: none;">
                                        <a class="tab-item" href="@Url.Action("UpdateManual", "UserManuals", new { manualId = encryptedManualId })">
                                            <i class="fas fa-pen" style="color: blue;"></i> Update
                                        </a>
                                        <a class="tab-item" href="@Url.Action("DeleteManual", "UserManuals", new { manualId = encryptedManualId })">
                                            <i class="fas fa-trash" style="color: red;"></i> Delete
                                        </a>
                                    </div>
                                }
                                else if (User.IsInRole("Club Administrator") ||
                                User.IsInRole("Fans Administrator") ||
                                User.IsInRole("Sports Administrator") ||
                                User.IsInRole("Sport Coordinator") ||
                                User.IsInRole("Official") ||
                                User.IsInRole("Personnel Administrator") ||
                                User.IsInRole("Division Manager") ||
                                User.IsInRole("Club Manager") ||
                                User.IsInRole("News Administrator") ||
                                User.IsInRole("News Updator"))
                                {
                                    <a href="~/@item.ManualDocument" class="btn btn-success btn-sm" download title="Download Document">
                                        <i class="fas fa-download" style="color: white;"></i> Download
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}
else
{
    <div class="d-flex justify-content-center align-items-center" style="height: 60vh; flex-direction: column;">
        <p class="text-center">There are no user manuals yet.</p>
        <div>
            @if (User.IsInRole("System Administrator"))
            {
                <a href="@Url.Action("UploadManual")" class="btn btn-outline-primary btn-create" id="addButton" style="white-space: nowrap;">
                    <i class="fas fa-plus"></i> Upload new
                </a>
            }
        </div>
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        $("#searchInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $(".formations-table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        setTimeout(function () {
            document.getElementById("tempDataMessage").style.display = "none";
        }, 5000);
    });
</script>
