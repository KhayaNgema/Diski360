@model IEnumerable<MyField.Models.Formation>
@inject MyField.Interfaces.IEncryptionService encryptionService
@{
    ViewData["Title"] = "Formations";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<br />
@await Html.PartialAsync("_HomeButton")
<h4 style="text-align:center;">Match line-up formations</h4>
<br />
<p class="text-center" style="padding-right:10px; padding-left:10px;">
    On this page, you are managing match lineup formations. You can view and update formation, including adding new formations, and modifying existing ones. 
</p>
<br />
@if (TempData["Message"] != null)
{
    <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
        @TempData["Message"]
        <span class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </span>
    </div>
}
@if (Model.Any())
{
    <div class="players-search-create-container" style="margin-bottom: 10px;">
        <div class="row">

            <div class="col-6 col-lg-4 d-flex justify-content-between align-items-center">
                <div class="search-bar" style="flex: 1; margin-right: 10px;">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search formation..." style="width: 100%;">
                </div>
            </div>
            <div class="col-6 create-button">
                <a href="@Url.Action("CreateFormation")" class="btn btn-outline-primary btn-create" style="white-space: nowrap;">
                    <i class="fas fa-plus"></i> Create new
                </a>
            </div>
        </div>
    </div>

    <br />
    <div class="table-responsive">
        <table class="table formations-table table-striped table-borderless">
            <thead>
                <tr style="color:white;background-color: #324260; white-space: nowrap;">
                    <th>
                        Formation
                    </th>
                    <th>
                        Image
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var encryptedFormationId = encryptionService.Encrypt(item.FormationId);

                    <tr style="max-width: 400px;">
                        <td>
                            @Html.DisplayFor(modelItem => item.FormationName)
                        </td>
                        <td>
                            <img src="~/@item.FormationImage" alt="Formation image" class="sport-news-image" style="object-fit:fill; width:150px; height:150px;"/>
                        </td>
                        <td class="text-right">
                            <button class="btn btn-primary btn-sm action-button" type="button" data-id="@item.FormationId">
                                Actions
                            </button>
                            <div class="action-tab" id="actionTab-@item.FormationId" style="display: none;">
                                <a class="tab-item" href="@Url.Action("UpdateFormation", "Formations", new { formationId = encryptedFormationId  })">
                                    <i class="fas fa-pen" style="color: blue;"></i> Update
                                </a>
                                <a class="tab-item" href="@Url.Action("DeleteFormation", "Formations", new { formationId = encryptedFormationId})">
                                    <i class="fas fa-trash" style="color: red;"></i> Delete
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
        <div class="d-flex justify-content-center align-items-center" style="height: 60vh; flex-direction: column;">
        <p class="text-center">There are no formations yet.</p>
        <div>
            <a href="@Url.Action("CreateFormation")" class="btn btn-outline-primary btn-create" id="addButton" style="white-space: nowrap;">
                <i class="fas fa-plus"></i> Create new
            </a>
        </div>
        </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        $("#searchInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $(".formations-table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        setTimeout(function () {
            document.getElementById("tempDataMessage").style.display = "none";
        }, 5000);
    });
</script>